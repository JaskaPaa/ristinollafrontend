{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/AI.js","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/Square.svelte","../../src/Resizebutton.svelte","../../src/Game.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.47.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    if (tag && typeof tag !== 'string') {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","\nlet sq;\nlet size;\n\nexport function playMove(squares) {\n\n    let moves = [];\n    sq = squares.slice();\n    size = sq.length;\n\n    for(var i = 0; i < sq.length; i++) {\n        var row = sq[i];\n        for(var j = 0; j < row.length; j++) {\n            if (sq[i][j] === '-')\n                moves.push({value: squareValue(i,j), move: [i,j]});\n        }\n    }\n\n    moves.sort((a,b) => b.value - a.value);\n\n    if (moves.length === size*size)\n        return {x: Math.round(size/2)-1, y:  Math.round(size/2)-1}; // AI plays the first move\n\n    return {x: moves[0].move[0], y:  moves[0].move[1]};\n}\n\nfunction squareValue2(x, y) {\n    return Math.floor(Math.random() * 10000);\n}\n\nfunction squareValue(x, y) {\n    var c, k, len1, ref, str, total;\n    total = 0;\n    ref = [\"X\", \"O\"];\n    for (k = 0, len1 = ref.length; k < len1; k++) {\n      c = ref[k];\n      sq[x][y] = c;\n      str = from_to(x, y - 5, 0, +1, 11); //vertical\n      total += row_value(str, c);\n      str = from_to(x - 5, y, +1, 0, 11); //horizontal\n      total += row_value(str, c);\n      str = from_to(x - 5, y - 5, +1, +1, 11); //diagonal\n      total += row_value(str, c);\n      str = from_to(x + 5, y - 5, -1, +1, 11); //diagonal\n      total += row_value(str, c);\n    }\n    sq[x][y] = \"-\"; // undo move\n    return total;\n }\n\nfunction from_to(x, y, step_x, step_y, len) {\n    var i, k, ref, str;\n    str = \"\";\n    for (i = k = 0, ref = len; (0 <= ref ? k < ref : k > ref); i = 0 <= ref ? ++k : --k) {\n      if ((x >= 0 && x < size) && (y >= 0 && y < size)) {\n        str += sq[x][y];\n      }\n      x += step_x;\n      y += step_y;\n    }\n    return str;\n}\n\nfunction row_value(str, c) {\n    var f, i;\n    str = str.replace(/_/g, '-');\n    f = (c === \"O\") ? 1 : 0;\n    if ((i = str.search(c + c + c + c + c)) !== -1) {\n      return 100000 + f * 10000;\n    }\n    if ((i = str.search(c + c + c + c)) !== -1) {\n      if (str[i - 1] === \"-\" && str[i + 4] === \"-\") {\n        return 10000 + f * 10000;\n      }\n      if (str[i - 1] === \"-\" || str[i + 4] === \"-\") {\n        return 900 + f * 500;\n      }\n      return 0;\n    }\n    if ((i = str.search(c + c + c + \"-\" + c + \"|\" + c + \"-\" + c + c + c)) !== -1) {\n      return 800 + f * 500;\n    }\n    if ((i = str.search(c + c + c)) !== -1) {\n      if (str.slice(i - 2, i) === \"--\" && str.slice(i + 3, i + 5) === \"--\") {\n        return 1000 + f * 1000;\n      }\n      if (str.slice(i - 2, i) === \"--\" || str.slice(i + 3, i + 5) === \"--\") {\n        return 300 + f * 100;\n      }\n      return 0;\n    }\n    if ((i = str.search(c + c + '-' + c)) !== -1 || (i = str.search(c + '-' + c + c)) !== -1) {\n      if (str.slice(i - 2, i) === \"--\" && str.slice(i + 4, i + 6) === \"--\") {\n        return 800 + f * 100;\n      }\n      if (str.slice(i - 2, i) === \"--\" || str.slice(i + 4, i + 6) === \"--\") {\n        return 500 + f * 100;\n      }\n      return 0;\n    }\n    if ((i = str.search('--' + c + c + '--')) !== -1) {\n      return 100 + f * 100;\n    }\n    return 0;\n}\n\n/* --- End of AI ------- */\n\nexport function checkFive (x, y, squares) {\n    var i, str, xs, ys;\n\n    if (x === -1)\n        return []; // not played yet\n\n    sq = squares.slice();  \n\n    let c = sq[x][y]; // last played (X or O)\n\n    //console.log(\"c: \" + c);\n\n    let winner_row = [];\n    \n    xs = x - 5;\n    if (xs < 0) {\n      xs = 0;\n    }\n    ys = y - 5;\n    if (ys < 0) {\n      ys = 0;\n    }\n    str = from_to(x, y - 5, 0, +1, 11); //vertical\n    if ((i = str.search(c + c + c + c + c)) !== -1) {\n      winner_row = [x, ys + i, x, ys + i + 4];\n    }\n    str = from_to(x - 5, y, +1, 0, 11); //horizontal\n    if ((i = str.search(c + c + c + c + c)) !== -1) {\n      winner_row = [xs + i, y, xs + i + 4, y];\n    }\n    if ((x - 5) <= 0 || (y - 5) <= 0) {\n      xs = x > y ? x - y : 0;\n      ys = y > x ? y - x : 0;\n    }\n    str = from_to(x - 5, y - 5, +1, +1, 11); //diagonal\n    if ((i = str.search(c + c + c + c + c)) !== -1) {\n      winner_row = [xs + i, ys + i, xs + i + 4, ys + i + 4];\n    }\n    xs = x + 5;\n    ys = y - 5 < 0 ? 0 : y - 5;\n    if ((x + 5) >= 19 || (y - 5) <= 0) {\n      xs = (19 - x) > y ? x + y : 19;\n      ys = y > (19 - x) ? y - (19 - x) : 0;\n    }\n    str = from_to(x + 5, y - 5, -1, +1, 11); //diagonal\n    if ((i = str.search(c + c + c + c + c)) !== -1) {\n      winner_row = [xs - i, ys + i, xs - i - 4, ys + i + 4];\n    }\n    \n    return winnerLineAllSquares(winner_row);    \n    \n  }\n\nfunction winnerLineAllSquares(line) {\n\n    if (line.length !== 4)\n        return [];\n\n    let x_step = 0;\n\n    if (line[2] - line[0] > 0)\n        x_step = +1;\n    \n    if (line[2] - line[0] < 0)\n        x_step = -1;\n    \n    let y_step = 0;\n\n    if (line[3] - line[1] > 0)\n        y_step = +1;\n    \n    if (line[3] - line[1] < 0)\n        y_step = -1;\n\n    let wLine = [line[0], line[1]];\n    \n    for (let k = 2; k < 8; k+=2 ) {\n        wLine[k]   = wLine[k-2] + x_step;\n        wLine[k+1] = wLine[k-1] + y_step;\n    }\n\n    wLine[8] = line[2];\n    wLine[9] = line[3];\n\n    return wLine;\n\n}\n\nexport function checkDraw(squares) {\n\n  let moves = [];\n  sq = squares.slice();\n  size = sq.length;\n\n  for(var i = 0; i < sq.length; i++) {\n      var row = sq[i];\n      for(var j = 0; j < row.length; j++) {\n          if (sq[i][j] === '-')\n              moves.push({value: 0, move: [i,j]});\n      }\n  }\n\n  if (moves.length === 0)\n    return true;\n  else\n    return false;\n  \n}\n \n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, derived } from 'svelte/store';\n\nexport const vw = writable(window.visualViewport.width);\nexport const vh = writable(window.visualViewport.height);\nexport const gameBackground = writable(\"#202020\");\nexport const gameLineColor = writable(\"#606060\");\n\n/* Jos värien keskiarvo on tumma niin valkoinen, päinvastoin niin musta. */\nexport const gameMarkColor = derived(\n\tgameBackground,\n\t$gameBackground => {\n        let colors = [$gameBackground.slice(1,3), $gameBackground.slice(3,5), $gameBackground.slice(5,7)];\n        colors = colors.map(c => parseInt(c,16));\n        let sum = colors.reduce((partialSum, a) => partialSum + a, 0);\n        return (sum/3 < 127) ? \"white\" : \"black\";\n    }\n);","<script>\n\nimport { fade } from 'svelte/transition';\nimport { vw } from './stores.js';\nimport { vh } from './stores.js';\nimport { gameBackground, gameLineColor, gameMarkColor } from './stores.js';\n\nexport let text = '';\nexport let onClick;\nexport let anim = false;\nexport let size;\n\n//$: console.log($gameMarkColor);\n\nlet testValue = 2;\n\n</script>\n\n<animate attributeType=\"XML\" attributeName=\"stroke\" values=\"blue;green;blue\"\n            dur=\"0.5s\" repeatCount=\"1\"/>\n\n\n<button on:click={onClick} class=\"square\" style=\"width:{size}px; height:{size}px; background:{$gameBackground}; border-color:{$gameLineColor}\">\n    <svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n    {#if text === 'X'}\t\n        <line class:anim={anim} opacity=\"0.6\" stroke={$gameMarkColor} stroke-width=\"12%\" x1=\"20%\" y1=\"20%\" x2=\"80%\" y2=\"80%\"></line>\n        <line class:anim={anim} opacity=\"0.6\" stroke={$gameMarkColor} stroke-width=\"12%\" x1=\"80%\" y1=\"20%\" x2=\"20%\" y2=\"80%\"></line>\n    {/if}\n    {#if text === 'O'}    \n        <circle class:anim={anim} fill=\"none\" opacity=\"0.6\" stroke={$gameMarkColor} stroke-width=\"12%\" cx=\"50%\" cy=\"50%\" r=\"30%\">\n        </circle>\n    {/if} \n    </svg>  \n</button>\n    \n<style>\n    .square {\n        background: #222;\n        border: solid #666;\n        border-width: thin 0px 0px thin; /* top and left 1px */\n        float: left;\n        /*font-size: 24px;\n        font-weight: bold;*/\n        /*color: black;*/\n        /*height: 2.5vw;\n        width:  2.5vw;*/\n        /*margin-right: 0px;\n        margin-top: 0px;\n        margin-bottom: 0px;*/\n        margin: 0;\n        padding: 0;\n        /*text-align: center;*/\n        border-radius: 0px; /* Why this's 2px in global.css ?? */\n        line-height: 0;\n    }\n\n    .anim {\n        animation: pulse 0.25s;\n        animation-iteration-count: 2;\n    }\n\n    .square:focus {\n        outline: none;\n    }\n\n    @keyframes pulse {\n        0%   { opacity: 1.0; }\n        50%  { opacity: 0.2; }\n        100% { opacity: 0.5; }\n    }\n\n    @media screen and (max-width: 1200px) {\n        .square {\n            width: 33px;\n            height: 33px;\n        }\n    }\n    \n</style>\n\n","<script>\n\nimport { gameBackground } from './stores.js';\n\nexport let size = 620;\nexport let top = size;\nexport let left = size;\nexport let resized = size;\n\nlet top2 = size;\nlet left2 = size;\n\nlet started = false;\n\nfunction startDrag(e) {    \n    started = true;\n    window.addEventListener('mousemove', handleMousemove);\n    window.addEventListener('mouseup', stopDrag);\n}\n\nfunction handleMousemove(e) {\n    if (started) {\n        left2 += e.movementX;\n        top2  += e.movementY;\n        \n        resized = Math.min(top2, left2);       \n    }\n}\n\nfunction stopDrag(e) {\n    console.log(`Mouse up: ${e.x}, ${e.y}`);\n    started = false;\n    window.removeEventListener(\"mousemove\", handleMousemove);\n    window.removeEventListener('mouseup', stopDrag);\n}\n\n\n</script>\n\n<button on:mousedown={startDrag} style=\"top:{top+8}px; left:{left+8}px; color:{$gameBackground}; width:{12}px; height:{12}px;\">\n    <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <!--path d=\"M12 0l5 5-12 12-5-5v12h12l-5-5 12-12 5 5v-12h-12z\" /-->\n        <!--path d=\"M0 0h12 l-5 5 12 12 5 -5 v12h-12l5-5 -12 -12 -5 5z \" fill={$gameBackground}/-->\n        <line  opacity=\"0.6\" stroke={$gameBackground} stroke-width=\"12%\" x1=\"10%\" y1=\"90%\" x2=\"90%\" y2=\"10%\"/>\n        <line  opacity=\"0.6\" stroke={$gameBackground} stroke-width=\"12%\" x1=\"40%\" y1=\"90%\" x2=\"90%\" y2=\"40%\"/>\n        <line  opacity=\"0.6\" stroke={$gameBackground} stroke-width=\"12%\" x1=\"70%\" y1=\"90%\" x2=\"90%\" y2=\"70%\"/>\n    </svg>\n</button>\n\n\n<style>\n    button {\n        position: absolute;\n        border: none;\n        background: none;\n        /*margin-top: -5px;\n        margin-left: -5px;*/\n        color: black;\n        margin: 0;\n        padding: 0;\n        border-radius: 0;\n        line-height: 0; /* !! muista tämä !! */\n        cursor: nwse-resize;\n    }\n    button:active{\n        background: none;\n        cursor: nwse-resize;\n    }    \n</style>\n","<script>\n\n    import * as AI from \"./AI.js\";\n\timport Square from './Square.svelte';\n    import Resizebutton from './Resizebutton.svelte';\n    import { fade } from 'svelte/transition';\n    import { beforeUpdate, afterUpdate } from 'svelte';\n    import { vw } from './stores.js';\n    import { gameBackground, gameLineColor, gameMarkColor } from './stores.js';\n    //export let move = {x: -1, y: -1};\n\n    export let winner = '';\n    export let bSize = 15;\n\n    let squares = Array(bSize).fill().map(()=> Array(bSize).fill(\"-\"));\n    let winnerLine = [];\n    let lastMove = {x: 0, y: 0};\n    let visible = false;\n    let humanPlaysFirstMove = true;\n    let line = [0, 0, 0, 0];\n    let switchXO = false;\n    \n    let background = '#777';\n    gameBackground.subscribe(value => {background = value});\n\n    let borderColor = '#abc'\n    gameLineColor.subscribe(value => {borderColor = value});\n\n    let resizedSize = 620;\n\n    $: console.log(\"Resized: \" + resizedSize + \" \" + squareSize +\" \"+ Math.floor(resizedSize/bSize)%2 ); \n\n    //$: squareSize = (Math.floor(resizedSize/20)%2 === 0) ? Math.floor(resizedSize/20) + 1 : Math.floor(resizedSize/20);\n    //$: squareSize = Math.floor($vw/50 - 1) + Math.floor($vw/50)%2; // make it to be an odd number\n    //$: squareSize = resizedSize/20\n    $: squareSize = (Math.round(resizedSize/bSize)%2 === 0) ? Math.round(resizedSize/bSize) + 1 : Math.round(resizedSize/bSize);\n\n    $: if (winnerLine.length > 0) {\n        \n        let ss = squareSize;\n\n        line[0] = Math.floor(winnerLine[1]*ss + ss/2 + 1);\n        line[1] = Math.floor(winnerLine[0]*ss + ss/2 + 1);\n        line[2] = Math.floor(winnerLine[9]*ss + ss/2 + 1);\n        line[3] = Math.floor(winnerLine[8]*ss + ss/2 + 1);        \n        \n        console.log(\"line: \" + line);\n        console.log(\"ss: \" + ss);\n        winner = squares[lastMove.x][lastMove.y];\n        console.log(\"GAME OVER\");\n\n    }\n\n    function markMove(x, y) {\n        if (winner !== '')\n            return; // game over\n        if (squares[x][y] !== '-')\n            return; // square played   \n        squares[x][y] = 'X';\n        lastMove = {x: x, y: y};\n        winnerLine = AI.checkFive(x, y, squares);\n        console.log(\"winnerLine: \" + winnerLine);\n        \n        if (winnerLine.length > 0)\n            return;\n        \n        console.log(\"Tasuri? \" + AI.checkDraw(squares));\n        if (AI.checkDraw(squares)) {\n            winner = \"Tasapeli\";\n            return;\n        }\n        \n        playAI();\n        //background = \"#251\";    \n    }\n\n    function playAI() {\n        console.log(\"AI plays...\");\n        if (winner !== '')\n            return; // game over\n        let move = AI.playMove(squares.slice());        \n        squares[move.x][move.y] = 'O';\n        lastMove = {x: move.x, y: move.y};\n        winnerLine = AI.checkFive(move.x, move.y, squares);\n        console.log(\"winnerLine: \" + winnerLine);\n        \n        console.log(\"Tasuri? \" + AI.checkDraw(squares));\n        if (AI.checkDraw(squares))\n            winner = \"Tasapeli\";        \n    }\n\n    export function newGame(size=15) {\n        bSize = size;\n        squares = Array(bSize).fill().map(()=> Array(bSize).fill(\"-\"));\n        winnerLine = [];\n        winner = '';\n        humanPlaysFirstMove = (humanPlaysFirstMove) ? false : true;\n\n        console.log(\"bSize: \" + bSize);\n\n        if (humanPlaysFirstMove === false) {\n            let move = AI.playMove(squares.slice());        \n            squares[move.x][move.y] = 'O';\n            lastMove = {x: move.x, y: move.y};\n        }\n    }    \n    \n    export function showLastMove() {        \n        visible = true;        \n        setTimeout(()=> {visible = false}, 500);        \n    }\n\n    function changeXO(mark) {\n        // stupid AI play always as 'O', so we have to change it this way  \n        if (switchXO === true)\n            return (mark === 'X') ? 'O' : 'X';\n        else\n            return mark;\n    }\n\t\n</script>\n\n<div class=\"wrapper\" style=\"background-color:{$gameBackground}; width:{bSize*(squareSize) + 39}px; border-color:{borderColor}\">\n    {#if winner === 'X' || winner === 'O'}\n    <svg height={bSize*(squareSize)} width={bSize*(squareSize)}>\n        <line class=\"path--\" x1={line[0]} y1={line[1]} x2={line[2]} y2={line[3]} \n            stroke={$gameMarkColor} opacity=\"0.6\" stroke-width={squareSize/3} \n            stroke-linecap=\"round\">            \n            <animate attributeType=\"XML\" values={(winner === 'X') ? \"green;blue\" : \"blue;green\"}\n            attributeName=\"stroke\" dur=\"0.5s\" repeatCount=\"5\"/>\n        </line>\n        <!--line x1=\"0\" y1=\"0\" x2=\"500\" y2=\"500\" opacity=\"1.0\" stroke=\"white\" stroke-width={1} />\n        <line x1=\"11\" y1=\"0\" x2=\"11\" y2=\"400\" stroke=\"white\" stroke-width={1} />\n        <line x1={squareSize*10 + 1} y1=\"0\" x2=\"0\" y2={squareSize*10 + 1} opacity=\"1.0\" stroke=\"white\" stroke-width={1} /-->               \n    </svg>\n    {/if}\n    {#each squares as row, i}\n\t\t<div class=\"board-row\">\n\t\t{#each row as square, j}\n            <Square onClick={() => markMove(i, j)}\n                text={(squares[i][j] === '-') ? '' :  changeXO(squares[i][j])}\n                anim={(i == lastMove.x && j == lastMove.y && visible) ? true : false}\n                size={squareSize}\n                />            \t\t\n\t\t{/each}\n\t\t</div>\n\t{/each}\n    <Resizebutton bind:resized={resizedSize} top={bSize*(squareSize)} left={bSize*(squareSize)}  />    \n</div>\n<!--p> {resizedSize} </p-->\n\n\n<style>\n\n    .board-row:after {\n        clear: both;\n        content: \"\";\n        display: table;\n    }\n\n    svg {\n        position: absolute;\n        top: 0px; left: 0px;\n    }\n\n    .wrapper {\n        position: relative;\n        border: solid #666;\n        border-width: 19px 20px 20px 19px;\n        /*background-color: #222;*/\n        /*resize: both;\n\t    overflow: hidden;*/\n    }\n\n    @keyframes dash {\n        to {\n            stroke-dashoffset: 1000;\n        }\n    }\n\n    @media screen and (max-width: 1200px) {\n        svg {\n            width:  640px;\n            height: 640px;\n        }\n    }\n\n\n</style>\n\t","<script>\n\n\t//import Square from './Square.svelte';\n\timport Game from './Game.svelte';\n\timport { gameBackground, gameLineColor, vw, vh } from './stores.js';\n\t\n\n\tlet win = '';\n\tlet boardSize = 18;\n\tlet gameRef;\n\tlet score = {X: 0, O: 0};\n\n\tlet color2 = \"#222222\";\n\t$: gameBackground.set(color2);\n\n\tlet color1 = \"#777777\";\n\t$: gameLineColor.set(color1);\n\t$: console.log(color1);\n\t$: if (gameRef !== undefined) gameRef.newGame(boardSize);\n\n\t$: if (win === 'X') { score.X++ }\n\t$: if (win === 'O') { score.O++ }\n\n\tfunction viewportResize() {\n\t\tvw.set(window.visualViewport.width);\n\t\tvh.set(window.visualViewport.height);\n\t}\n\n\tfunction changeSize() {\n\t\tboardSize += 1;\n\t\tgameRef.newGame(boardSize);\n\t}\n\n\twindow.visualViewport.addEventListener('resize', viewportResize);\n\n</script>\n\n<svelte:head>\n\t<title>Ristinolla</title>\n\t<meta name=\"robots\" content=\"noindex nofollow\" />\n\t<html lang=\"fi\" />\n</svelte:head>\n\n<div class=\"header\">\n\t<h1>Ristinolla</h1>\n</div>\n  \n<main>\n\t<div class=\"left\" style=\"background: {color2+\"55\"}; color: {\"black\"}\">\n\t\t<fieldset>\n\t\t\t<legend align=\"center\">Pelitilanne</legend>\t\t\t\n\t\t\t<table class=\"scores\">\n\t\t\t\t<tr>\n\t\t\t\t  <th>X</th>\n\t\t\t\t  <th>O</th>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t  <td id=\"xscore\" class=\"scores\">{score.X}</td>\n\t\t\t\t  <td id=\"oscore\" class=\"scores\">{score.O}</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t<br>\n\t\t\t<p>{(win === '') ? \"Sinun vuorosi\" : \"Voittaja: \" + win}</p>\n\t\t\t<!--p>Pisteet: {score.X + \"-\" + score.O}</p-->\n\t\t</fieldset>\n\t\t<button on:click={() => gameRef.newGame(boardSize)} disabled='{(win !=='') ? false : true}'>Uusi peli</button>\n\t\t<button on:click={gameRef.showLastMove}>Viime siirto</button>\n\t</div>\n\n\t<div class=\"middle\">\t\t\n\t\t<Game bind:winner={win} bind:this={gameRef} bSize={boardSize}/>\n\t\t<!--h1>vw: {$vw} vh: {$vh}</h1-->\n\t</div>\n\t<div class=\"right\" style=\"background: {color2+\"55\"}; color: {\"black\"}\">\n\t\t<h1>Asetukset</h1>\n\t\t<div>\n\t\t\t<input type=\"color\" id=\"head\" name=\"head\"\n\t\t\t\tbind:value={color2}>\n\t\t\t<label for=\"head\">Tausta</label>\n\t\t</div>\t\t\n\t\t<div>\n\t\t\t<input type=\"color\" id=\"body\" name=\"body\"\n\t\t\t\tbind:value={color1}>\n\t\t\t<label for=\"body\">Reuna</label>\n\t\t</div>\n\t\t<p>Väri: {color2}</p>\n\t\t<button on:click={ () => {boardSize += 1; gameRef.newGame(boardSize)} }>++</button>\n\t\t<button on:click={ () => {boardSize -= 1; gameRef.newGame(boardSize)} }>--</button>\n\t\t<input type=range bind:value={boardSize} min=5 max=30>\n\t</div>\t\n</main>\n\n<style>\n\t\n\t:global(*) {\n\t\tmargin: 0;\n    \tpadding: 0;\n\t\tbox-sizing: border-box;\n\t}\n\t:global(body) {\n\t\tmargin: 0;\n    \tpadding: 0;\n\t\tbox-sizing: border-box;\n\t\tuser-select: none;\n\t}\n\t.header {\n\t\tborder: 0px solid blue;\n\t\tpadding: 15px;\n\t\ttext-align: center;\t\t\n\t}\t\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 0;\n\t\tmax-width: none;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: normal;\n\t\tflex-wrap: wrap;\n\t\tflex-direction: row;\n\t}\n\th1 {\n\t\t/*color: #222;*/\n\t\ttext-transform: uppercase;\n\t\tfont-size: 2em;\n\t\tfont-weight: 100;\n\t}\n\t.left {\n\t\tbackground-color: #999;\n\t\tpadding: 20px;\n\t\t/*float: left;\n\t\twidth: 30%;*/ /* The width is 20%, by default */\n\t}\t\n\t.middle {\n\t\tbackground-color: #fff;\n\t\tpadding: 0px;\n\t\t/*float: left;\n\t\twidth: 60%;*/ /* The width is 60%, by default */\n\t}\n\t.right {\n\t\tbackground-color: #999;\n\t\tpadding: 20px;\n\t\t/*float: left;\n\t\twidth: 10%; *//* The width is 20%, by default */\n\t}\n\tinput {\n    \tmargin: 0.1rem;\n\t\theight: 3vh;\n\t}\t\n\tfieldset {\n\t\tborder-radius: 0px;\n\t\tpadding: 1vh;\n\t\tborder-color: #000;\n\t\tborder-width: 6px;\n\t}\n\tlegend {\n    \tbackground-color: #0000;\n    \tcolor: #000;\n    \t/*padding: 3px 6px;*/\n\t}\n\ttable.scores, td.scores {\n\t\tborder-collapse: collapse;\n\t}\n\ttd.scores {\n\t\tborder: 1px solid black;\n\t\twidth: 100px;\n\t\ttext-align: center;\n\t\tbackground-color:  #ffffff77;\n\t}\n\n\ttd, tr {\n\t\tpadding: 0;\n\t}\n\n\tth {\n\t\tbackground-color:  #00000000;\n\t\tborder-bottom: 3px solid #444;\n\t}\n\n\t@media screen and (max-width: 480px) {\n  \t\t.left, .middle, .right {\n    \t\twidth: 120%; /* The width is 100%, when the viewport is 800px or smaller */\n  \t\t}\n\t\tmain :nth-child(1) { order: 2; }\n    \tmain :nth-child(2) { order: 1; }\n    \tmain :nth-child(3) { order: 3; }  \n\t}\n\n\t\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\t\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","toggle_class","toggle","classList","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","sq","size","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","indexOf","splice","$set","$$props","obj","$$set","keys","playMove","squares","moves","slice","row","j","squareValue","move","sort","x","Math","round","y","k","len1","ref","total","row_value","from_to","step_x","step_y","len","str","f","replace","search","checkFive","xs","ys","winner_row","line","x_step","y_step","wLine","winnerLineAllSquares","checkDraw","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","vw","window","visualViewport","width","vh","height","gameBackground","gameLineColor","gameMarkColor","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","derived","$gameBackground","colors","parseInt","reduce","partialSum","line0","line1","circle","if_block0","create_if_block_1","if_block1","create_if_block","animate","button","svg","apply","arguments","onClick","anim","line2","top","left","resized","top2","left2","started","handleMousemove","e","movementX","movementY","$$invalidate","min","stopDrag","console","log","animate_values_value","line_1","line_1_x__value","line_1_y__value","line_1_x__value_1","line_1_y__value_1","line_1_stroke_width_value","svg_height_value","svg_width_value","square_changes","div","each_blocks","if_block","resizebutton_changes","winner","bSize","winnerLine","lastMove","visible","humanPlaysFirstMove","borderColor","resizedSize","markMove","AI.checkFive","AI.checkDraw","AI.playMove","playAI","squareSize","floor","ss","setTimeout","t9_value","X","t11_value","O","t14_value","button0","disabled","button0_disabled_value","div1","div5","head","meta","html","div0","main","fieldset","legend","table","tr0","tr1","td0","td1","br","p0","button1","div2","h11","div3","input0","label0","div4","input1","label1","p1","button2","button3","input2","showLastMove","current","t9","t11","t14","gameRef","win","boardSize","score","color2","color1","newGame","$$value","body"],"mappings":"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"}